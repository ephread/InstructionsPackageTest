# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Test all"
  lane :test_all do
    test_swiftpm
    test_carthage
    test_cocoapods
  end

  desc "Test Swift Package Manager"
  lane :test_swiftpm do
    remove_package_dot_resolved

    test_scheme(
      workspace: "InstructionsPackageTest.xcworkspace",
      scheme: "InstructionsSwiftPM"
    )
  end

  desc "Test Carthage"
  lane :test_carthage do
    remove_package_dot_resolved

    carthage(
      project_directory: "InstructionsCarthage",
      command: "update",
      use_xcframeworks: "true"
    )

    test_scheme(
      workspace: "InstructionsPackageTest.xcworkspace",
      scheme: "InstructionsCarthage"
    )
  end

  desc "Test CocoaPods"
  lane :test_cocoapods do
    remove_package_dot_resolved

    cocoapods(
      podfile: "InstructionsCocoaPods/Podfile"
    )

    test_scheme(
      workspace: "InstructionsCocoaPods/InstructionsCocoaPods.xcworkspace",
      scheme: "InstructionsCocoaPods"
    )
  end

  desc "Test given workspace & scheme"
  lane :test_scheme do |values|
    build_app(
      workspace: values[:workspace],
      scheme: values[:scheme],
      clean: true,
      skip_archive: true,
      skip_codesigning: true
    )

    run_tests(
      workspace: values[:workspace],
      scheme: values[:scheme],
    )
  end

  desc "Remove Package.resolved"
  lane :remove_package_dot_resolved do
    package_resolved_path = File.join(
      "..", "InstructionsPackageTest.xcworkspace", "xcshareddata", "swiftpm", "Package.resolved"
    )

    if File.exist?(package_resolved_path)
      UI.message("'Package.resolved' removed")
      File.delete(package_resolved_path)
    else
      UI.message("'Package.resolved' not found, nothing to remove.")
    end
  end
end